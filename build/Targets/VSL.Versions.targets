<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <RoslynSemanticVersion Condition="'$(RoslynSemanticVersion)' == '' AND '$(UseVisualStudioVersion)' == 'true'">15.3.0</RoslynSemanticVersion>
    <RoslynSemanticVersion Condition="'$(RoslynSemanticVersion)' == ''">2.3.0</RoslynSemanticVersion>
    <MicroBuildVersion>0.2.0</MicroBuildVersion>
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(BUILD_BUILDNUMBER)</BuildNumber>

    <!-- Split the build parts out from the BuildNumber which is given to us by MicroBuild in the format of yyyymmdd.nn
         where BuildNumberFiveDigitDateStamp is mmmdd (such as 60615) and BuildNumberBuildOfTheDay is nn (which represents the nth build
         started that day). So the first build of the day, 20160615.1, will produce something similar to BuildNumberFiveDigitDateStamp: 60615,
         BuildNumberBuildOfTheDayPadded: 01;and the 12th build of the day, 20160615.12, will produce BuildNumberFiveDigitDateStamp: 60615, BuildNumberBuildOfTheDay: 12

         Additionally, in order ensure the value fits in the 16-bit PE header fields, we will only take the last five digits of the BuildNumber, so
         in the case of 20160615, we will set BuildNumberFiveDigitDateStamp to 60615. Unfortunately for releases in 2017 we can't go any higher, so
         we will continue the month counting instead: the build after 61231 is 61301. -->
    <BuildNumberFiveDigitDateStamp Condition="'$(BuildNumber)' != ''">$([MSBuild]::Subtract($(BuildNumber.Split('.')[0].Substring(3).Trim()), 8800))</BuildNumberFiveDigitDateStamp>
    <BuildNumberBuildOfTheDayPadded Condition="('$(BuildNumber)' != '') AND ($(BuildNumber.Split('.').Length) == 2)">$(BuildNumber.Split('.')[1].PadLeft(2,'0'))</BuildNumberBuildOfTheDayPadded>
  </PropertyGroup>

  <PropertyGroup>
    <ProjectSystemSDKVersion>15.3.93-pre-g57d342093d</ProjectSystemSDKVersion>
    <SystemCollectionsImmutableVersion>1.3.1</SystemCollectionsImmutableVersion>
    <SystemReflectionMetadataVersion>1.4.2</SystemReflectionMetadataVersion>
    <SystemRuntimeInteropServicesRuntimeInformationVersion>4.3.0</SystemRuntimeInteropServicesRuntimeInformationVersion>
    <MicrosoftVisualStudioShellInterop10Version>10.0.30319</MicrosoftVisualStudioShellInterop10Version>
    <MicrosoftVisualStudioShellInterop11Version>11.0.61030</MicrosoftVisualStudioShellInterop11Version>
    <MicrosoftVisualStudioTextManagerInterop10Version>10.0.30319</MicrosoftVisualStudioTextManagerInterop10Version>
    <MicrosoftVisualStudioTextManagerInterop12Version>12.0.30110</MicrosoftVisualStudioTextManagerInterop12Version>
    <MicrosoftVisualStudioShell15Version>15.0.26201</MicrosoftVisualStudioShell15Version>
    <MicrosoftVisualStudioShellDesign>15.0.26201</MicrosoftVisualStudioShellDesign>
    <MicrosoftVisualStudioManagedInterfaces>8.0.50727</MicrosoftVisualStudioManagedInterfaces>
    <MicrosoftVisualStudioIntegrationTestUtilitiesVersion>2.6.0-beta1-61719-07</MicrosoftVisualStudioIntegrationTestUtilitiesVersion>
    <MoqVersion>4.2.1402.2112</MoqVersion>
    <MicrosoftVisualStudioLanguageServicesVersion>2.6.0-beta1-61719-07</MicrosoftVisualStudioLanguageServicesVersion>
    <RoslynToolsDownloadRoslynVsixesVersion>0.3.2-beta</RoslynToolsDownloadRoslynVsixesVersion>
    <RoslynToolsMicrosoftVSIXExpInstallerVersion>0.2.4-beta</RoslynToolsMicrosoftVSIXExpInstallerVersion>
    <XUnitVersion>2.2.0</XUnitVersion>
    <XUnitRunnerConsoleVersion>2.2.0</XUnitRunnerConsoleVersion>
    <XUnitRunnerVisualstudioVersion>2.2.0</XUnitRunnerVisualstudioVersion>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(BuildVersion)' != ''">
      <!-- The user specified a build version number. In that case, we'll use their version number
          for the file version, and force the assembly version to $(RoslynSemanticVersion).0.  That way
          day-to-day upgrades don't break assembly references to other installed apps. -->
      <PropertyGroup>
        <AssemblyVersion>$(RoslynSemanticVersion).0</AssemblyVersion>
      </PropertyGroup>
    </When>

    <When Condition="('$(BuildNumber)' != '') AND ('$(BuildNumberFiveDigitDateStamp)' != '') AND ('$(BuildNumberBuildOfTheDayPadded)' != '')">
      <!-- The user specified a build number, so we should use that. -->
      <PropertyGroup>
        <AssemblyVersion>$(RoslynSemanticVersion).0</AssemblyVersion>
        <BuildVersion>$(RoslynSemanticVersion).$(BuildNumberFiveDigitDateStamp)</BuildVersion>
      </PropertyGroup>
    </When>

    <When Condition="'$(OfficialBuild)' == 'true' OR '$(RealSignBuild)' == 'true' OR '$(SignType)' == 'real'">
      <!-- We're creating an official or real-signed build, but don't have a build number. Just use the RoslynSemanticVersion.
          This happens if the build template does not pass BuildNumber down to MSBuild. -->
      <PropertyGroup>
        <AssemblyVersion>$(RoslynSemanticVersion).0</AssemblyVersion>
        <BuildVersion>$(RoslynSemanticVersion).$(BuildNumberFiveDigitDateStamp)</BuildVersion>
      </PropertyGroup>
    </When>

    <Otherwise>
      <!-- No build version was supplied.  We'll use a special version, higher than anything
          installed, so that the assembly identity is different.  This will allows us to
          have a build with an actual number installed, but then build and F5 a build with
          this number.  -->
      <PropertyGroup>
        <BuildVersion>42.42.42.42</BuildVersion>
        <AssemblyVersion>42.42.42.42</AssemblyVersion>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Returns the current build version. Used in .vsixmanifests to substitute our build version into them -->
  <Target Name="GetBuildVersion" Outputs="$(BuildVersion)" />

  <!-- NuGet version -->
  <PropertyGroup>
    <CommonNuGetMoniker>beta2</CommonNuGetMoniker>
    <VSSemanticVersion>15.3</VSSemanticVersion>    
    <RoslynNuGetReleaseVersion>$(RoslynSemanticVersion.Substring(0, $(RoslynSemanticVersion.LastIndexOf('.'))))</RoslynNuGetReleaseVersion>
    <RoslynNuGetPerBuildVersion Condition="'$(BuildNumberFiveDigitDateStamp)' != '' AND '$(BuildNumberBuildOfTheDayPadded)' != ''">$(RoslynNuGetReleaseVersion).0-$(CommonNuGetMoniker)-$(BuildNumberFiveDigitDateStamp.Trim())$(BuildNumberBuildOfTheDayPadded.Trim())</RoslynNuGetPerBuildVersion>
    <RoslynNuGetPerBuildVersion Condition="'$(RoslynNuGetPerBuildVersion)' == ''">1.0.0-$(CommonNuGetMoniker)</RoslynNuGetPerBuildVersion>
    <VSNuGetPerBuildVersion Condition="'$(BuildNumberFiveDigitDateStamp)' != '' AND '$(BuildNumberBuildOfTheDayPadded)' != ''">$(VSSemanticVersion).0-$(CommonNuGetMoniker)-$(BuildNumberFiveDigitDateStamp.Trim())$(BuildNumberBuildOfTheDayPadded.Trim())</VSNuGetPerBuildVersion>
    <VSNuGetPerBuildVersion Condition="'$(VSNuGetPerBuildVersion)' == ''">1.0.0-$(CommonNuGetMoniker)</VSNuGetPerBuildVersion>
  </PropertyGroup>
  
</Project>
